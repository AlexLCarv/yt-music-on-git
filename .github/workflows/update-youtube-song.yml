name: Atualizar Última Música do YouTube

on:
  schedule:
    - cron: '0 0 * * *'  # Roda todos os dias às 00:00
  workflow_dispatch:  # Permite rodar manualmente

jobs:
  update-html:
    runs-on: ubuntu-latest

    steps:
      - name: Clonar repositório
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Instalar Dependências
        run: |
          pip install google-api-python-client
          pip install google-auth google-auth-oauthlib google-auth-httplib2 requests flask selenium html2image
          pip install webdriver_manager  # Instala o webdriver_manager

      - name: Rodar script Python para atualizar o index.html
        run: python yt-music-on-git.py
        env:
          TOKEN_JSON: ${{ secrets.TOKEN_JSON }}
          CREDENTIALS_JSON: ${{ secrets.CREDENTIALS_JSON }}

      - name: Configurar o WebDriver do Selenium
        run: |
          sudo apt-get install -y wget unzip
          wget https://chromedriver.storage.googleapis.com/114.0.5735.90/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip -d /usr/local/bin
          chmod +x /usr/local/bin/chromedriver

      - name: Tirar captura de tela da página atualizada
        run: |
          python -c "
          from selenium import webdriver
          from webdriver_manager.chrome import ChromeDriverManager
          from selenium.webdriver.chrome.service import Service
          from selenium.webdriver.common.by import By
          from selenium.webdriver.chrome.options import Options
          
          options = Options()
          options.headless = True  # Rodar o navegador em modo headless (sem interface gráfica)
          options.add_argument('--no-sandbox')  # Evitar o erro de sandbox
          driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=options)
          
          driver.get('https://alexlcarv.github.io/yt-music-on-git/')
          
          # Esperar o conteúdo carregar (caso necessário, dependendo do seu script)
          driver.implicitly_wait(10)
          
          # Tirar o screenshot
          driver.save_screenshot('static/output.png')
          driver.quit()
          "

      - name: Set up Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      
      - name: Commit changes
        run: |
          git add .
          git commit -m "Atualizando index.html com a última música do YouTube"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
